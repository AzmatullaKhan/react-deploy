{"ast":null,"code":"var _jsxFileName = \"D:\\\\3_year\\\\JFSD-Microservices\\\\FrontendMicroservices\\\\src\\\\pages\\\\imageDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDisplay = () => {\n  _s();\n  const [images, setImages] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    fetch(`http://localhost:9001/images`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setImages(data);\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(error => {\n      console.error('Error fetching images:', error);\n      setLoading(false); // Ensure loading is false even on error\n    });\n  }, []);\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check if images are available\n  if (!images || images.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No images available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: images.map(imageData => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: imageData.images.map((base64Image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: base64Image,\n        alt: `Image ${imageData.id}-${index + 1}`,\n        style: {\n          width: '100px',\n          margin: '10px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, imageData.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageDisplay, \"QBslGb/yTBcjcjShOOciEvHlA24=\");\n_c = ImageDisplay;\nexport default ImageDisplay;\nvar _c;\n$RefreshReg$(_c, \"ImageDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ImageDisplay","_s","images","setImages","loading","setLoading","fetch","then","response","ok","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","imageData","style","marginBottom","base64Image","index","src","alt","id","width","margin","_c","$RefreshReg$"],"sources":["D:/3_year/JFSD-Microservices/FrontendMicroservices/src/pages/imageDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ImageDisplay = () => {\r\n    const [images, setImages] = useState([]); // Initialize as an empty array\r\n    const [loading, setLoading] = useState(true); // Track loading state\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:9001/images`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setImages(data);\r\n                setLoading(false); // Set loading to false after data is fetched\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching images:', error);\r\n                setLoading(false); // Ensure loading is false even on error\r\n            });\r\n    }, []);\r\n\r\n    // Render loading state\r\n    if (loading) {\r\n        return <div>Loading images...</div>;\r\n    }\r\n\r\n    // Check if images are available\r\n    if (!images || images.length === 0) {\r\n        return <div>No images available.</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {images.map((imageData) => (\r\n                <div key={imageData.id} style={{ marginBottom: '20px' }}>\r\n                    {imageData.images.map((base64Image, index) => (\r\n                        <img \r\n                            key={index} \r\n                            src={base64Image} \r\n                            alt={`Image ${imageData.id}-${index + 1}`} \r\n                            style={{ width: '100px', margin: '10px' }} \r\n                        />\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,8BAA8B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVT,SAAS,CAACS,IAAI,CAAC;MACfP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAID,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAiB,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;;EAEA;EACA,IAAI,CAAClB,MAAM,IAAIA,MAAM,CAACmB,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOtB,OAAA;MAAAiB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,EACKd,MAAM,CAACoB,GAAG,CAAEC,SAAS,iBAClBxB,OAAA;MAAwByB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAT,QAAA,EACnDO,SAAS,CAACrB,MAAM,CAACoB,GAAG,CAAC,CAACI,WAAW,EAAEC,KAAK,kBACrC5B,OAAA;QAEI6B,GAAG,EAAEF,WAAY;QACjBG,GAAG,EAAE,SAASN,SAAS,CAACO,EAAE,IAAIH,KAAK,GAAG,CAAC,EAAG;QAC1CH,KAAK,EAAE;UAAEO,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAO;MAAE,GAHrCL,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ;IAAC,GARIG,SAAS,CAACO,EAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASjB,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAhDID,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAkDlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}