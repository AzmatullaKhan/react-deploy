{"ast":null,"code":"var _jsxFileName = \"D:\\\\3_year\\\\JFSD-Microservices\\\\FrontendMicroservices\\\\src\\\\pages\\\\imageDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDisplay = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get('http://localhost:9001/images'); // Ensure this matches your backend\n        const base64Images = response.data.map(img => ({\n          id: img.id,\n          data1: `data:image/png;base64,${Buffer.from(img.data1).toString('base64')}`\n          // Add other data fields as necessary...\n        }));\n        setImages(base64Images);\n      } catch (err) {\n        setError('Error fetching images: ' + err.message);\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchImages();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading images...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.data1 // Change to whichever image you want to display\n          ,\n          alt: image.name,\n          style: {\n            width: '150px',\n            height: '150px',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageDisplay, \"SGYMHLW/ngJ/dX7fYKx5qnwA+98=\");\n_c = ImageDisplay;\nexport default ImageDisplay;\nvar _c;\n$RefreshReg$(_c, \"ImageDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ImageDisplay","_s","images","setImages","loading","setLoading","error","setError","fetchImages","response","get","base64Images","data","map","img","id","data1","Buffer","from","toString","err","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","image","margin","name","src","alt","width","height","objectFit","_c","$RefreshReg$"],"sources":["D:/3_year/JFSD-Microservices/FrontendMicroservices/src/pages/imageDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ImageDisplay = () => {\r\n    const [images, setImages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:9001/images'); // Ensure this matches your backend\r\n                const base64Images = response.data.map((img) => ({\r\n                    id: img.id,\r\n                    data1: `data:image/png;base64,${Buffer.from(img.data1).toString('base64')}`,\r\n                    // Add other data fields as necessary...\r\n                }));\r\n                setImages(base64Images);\r\n            } catch (err) {\r\n                setError('Error fetching images: ' + err.message);\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n\r\n        fetchImages();\r\n    }, []);\r\n\r\n    if (loading) return <div>Loading images...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Image Gallery</h1>\r\n            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {images.map((image) => (\r\n                    <div key={image.id} style={{ margin: '10px' }}>\r\n                        <h2>{image.name}</h2>\r\n                        <img\r\n                            src={image.data1} // Change to whichever image you want to display\r\n                            alt={image.name}\r\n                            style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}